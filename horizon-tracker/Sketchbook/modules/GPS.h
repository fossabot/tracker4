#include "Arduino.h"
#include <avr/pgmspace.h>
#include "UbxPackets.h"
#include "../Generic.h"
//#include "UbxGpsNavPvt.h"

#define DATETIME_FORMAT "%04d.%02d.%02d %02d:%02d:%02d"
#define DATETIME_LENGTH 20

// B562   0608 0600 8813 0100 0100 B149
// HEADER CMD  LEN  5000    1    1 CKSUM

#ifndef __HorizonGPS_h
#define __HorizonGPS_h

const PROGMEM byte UBX_CFG_RATE_1_SEC[] = { 0x06, 0x08, 0x06, 0x00, 0xE8, 0x03, 0x01, 0x00, 0x01, 0x00 };
const PROGMEM byte UBX_CFG_RATE_3_SEC[] = { 0x06, 0x08, 0x06, 0x00, 0xB8, 0x0B, 0x01, 0x00, 0x01, 0x00 };
const PROGMEM byte UBX_CFG_RATE_5_SEC[] = { 0x06, 0x08, 0x06, 0x00, 0x88, 0x13, 0x01, 0x00, 0x01, 0x00 };
const PROGMEM byte UBX_CFG_RATE_10_SEC[] = { 0x06, 0x08, 0x06, 0x00, 0x10, 0x27, 0x01, 0x00, 0x01, 0x00 };


const PROGMEM byte UBX_GNSS_DISABLE[] = { 0x06, 0x3E, 0x0C, 0x00, 0x00, 0x00, 0x20, 0x01, 0x06, 0x08, 0x0E, 0x00, 0x00, 0x00, 0x01, 0x00 };
const PROGMEM byte UBX_GNSS_ENABLED[] = { 0x06, 0x3E, 0x0C, 0x00, 0x00, 0x00, 0x20, 0x01, 0x00, 0x08, 0x0E, 0x00, 0x01, 0x00, 0x01, 0x00 };
const PROGMEM byte UBX_GNSS[] = { 0x06, 0x3E, 0x00, 0x00 };

const PROGMEM byte UBX_CFG_RXM_NORMAL[] = { 0x06, 0x11, 0x02, 0x00, 0x00, 0x00 };
const PROGMEM byte UBX_CFG_RXM_PWR_SAVE[] = { 0x06, 0x11, 0x02, 0x00, 0x00, 0x01 };

const PROGMEM byte UBX_CFG_PRT_DISABLE[]  = { 0x06, 0x00, 0x14, 0x00, 0x01, 0x00, 0x00, 0x00, 0xC0, 0x08, 0x00, 0x00, 0x80, 0x25, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
const PROGMEM byte UBX_CFG_PRT_9600[]  = { 0x06, 0x00, 0x14, 0x00, 0x01, 0x00, 0x00, 0x00, 0xC0, 0x08, 0x00, 0x00, 0x80, 0x25, 0x00, 0x00, 0x07, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00 };

const PROGMEM byte UBX_CFG_PRT_DISABLE_4800[]  = { 0x06, 0x00, 0x14, 0x00, 0x01, 0x00, 0x00, 0x00, 0xC0, 0x08, 0x00, 0x00, 0xC0, 0x12, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
const PROGMEM byte UBX_CFG_PRT_4800[]  = { 0x06, 0x00, 0x14, 0x00, 0x01, 0x00, 0x00, 0x00, 0xC0, 0x08, 0x00, 0x00, 0xC0, 0x12, 0x00, 0x00, 0x07, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00 };


const PROGMEM byte UBX_CFG_PRT_38400[] = { 0x06, 0x00, 0x14, 0x00, 0x01, 0x00, 0x00, 0x00, 0xD0, 0x08, 0x00, 0x00, 0x00, 0x96, 0x00, 0x00, 0x07, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00 };


const PROGMEM byte UBX_CFG_MSG_GET[] = { 0x06, 0x01, 0x02, 0x00, 0x01, 0x07};
const PROGMEM byte UBX_CFG_MSG_NAV_PVT[] = { 0x06, 0x01, 0x03, 0x00, 0x01, 0x07, 0x02};
const PROGMEM byte UBX_CFG_MSG_ESF_STS[] = { 0x06, 0x01, 0x03, 0x00, 0x10, 0x10, 0xB4};


const PROGMEM byte UBX_CFG_MSG_NAV_PVT_DIS[] = { 0x06, 0x01, 0x03, 0x00, 0x01, 0x07, 0x00};
const PROGMEM byte UBX_CFG_MSG_ESF_STS_DIS[] = { 0x06, 0x01, 0x03, 0x00, 0x10, 0x10, 0x00};
//                                       |          HEADER     | | 0   | 1   | 2   | 3   | 4   | 5   | 6   | 7   | 8   | 9   | 10  | 11  | 12  | 13  | 14  | 15  | 16  | 17  | 18  | 19  | 20  | 21  | 22
// | 23 | 24  | 25  | 26  | 27  | 28  | 29  | 30  | 31  | 32  | 33  | 34  | 35
const PROGMEM byte UBX_CFG_NAV5_SET[] = { 0x06, 0x24, 0x24, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

const PROGMEM byte UBX_CFG_NAV5_GET[] = { 0x06, 0x24, 0x00, 0x00};

//PSMCT
//                                   CLASS ID    LENGTH       0     1     2     3     4     -     -     -     8     -     -     -     12    -     -     -     16    -     -     -     20    -     22    -     24
//const PROGMEM byte UBX_CFG_PM2C[] = { 0x06, 0x3B, 0x2C, 0x00, 0x01, 0x06, 0x00, 0x00, 0x00, 0x90, 0x02, 0x00, 0xE8, 0x03, 0x00, 0x00, 0x10, 0x27, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x2C, 0x01, 0x00, 0x00, 0x4F, 0xC1, 0x03, 0x00, 0x86, 0x02, 0x00, 0x00, 0xFE, 0x00, 0x00, 0x00, 0x64, 0x40, 0x01, 0x00 };

// ON/OFF LONG UPDATE PERIOD (60s)
const PROGMEM byte UBX_CFG_PM2_PSMOO_60S[] = { 0x06, 0x3B, 0x2C, 0x00, 0x01, 0x06, 0x00, 0x00, 0x00, 0x90, 0x01, 0x00, 0x60, 0xEA, 0x00, 0x00, 0x10, 0x27, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2C, 0x01, 0x00, 0x00, 0x4F, 0xC1, 0x03, 0x00, 0x86, 0x02, 0x00, 0x00, 0xFE, 0x00, 0x00, 0x00, 0x64, 0x40, 0x01, 0x00 };

// ON/OFF LONG UPDATE PERIOD (180s)
const PROGMEM byte UBX_CFG_PM2_PSMOO_180[] = { 0x06, 0x3B, 0x2C, 0x00, 0x01, 0x06, 0x00, 0x00, 0x00, 0x90, 0x01, 0x00, 0x20, 0xBF, 0x02, 0x00, 0x10, 0x27, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2C, 0x01, 0x00, 0x00, 0x4F, 0xC1, 0x03, 0x00, 0x86, 0x02, 0x00, 0x00, 0xFE, 0x00, 0x00, 0x00, 0x64, 0x40, 0x01, 0x00 };

// ON/OFF LONG UPDATE PERIOD (5 minutes)
const PROGMEM byte UBX_CFG_PM2_PSMOO_300[] = { 0x06, 0x3B, 0x2C, 0x00, 0x01, 0x06, 0x00, 0x00, 0x00, 0x90, 0x01, 0x00, 0xE0, 0x93, 0x04, 0x00, 0x10, 0x27, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2C, 0x01, 0x00, 0x00, 0x4F, 0xC1, 0x03, 0x00, 0x86, 0x02, 0x00, 0x00, 0xFE, 0x00, 0x00, 0x00, 0x64, 0x40, 0x01, 0x00 };

// CYCLIC MODE (NO TRACKING TIME)
const PROGMEM byte UBX_CFG_PM2_PSMCT____[] = { 0x06, 0x3B, 0x2C, 0x00, 0x01, 0x06, 0x00, 0x00, 0x00, 0x90, 0x02, 0x00, 0x10, 0x27, 0x00, 0x00, 0x10, 0x27, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2C, 0x01, 0x00, 0x00, 0x4F, 0xC1, 0x03, 0x00, 0x86, 0x02, 0x00, 0x00, 0xFE, 0x00, 0x00, 0x00, 0x64, 0x40, 0x01, 0x00 };

const PROGMEM byte UBX_NAV[] = { 0x01, 0x03};


#define GPS_POWER_SAVE_MODE 0
#define GPS_LOW_RATE_MODE 1
#define GPS_MEDIUM_RATE_MODE 2
#define GPS_HIGH_RATE_MODE 3

namespace nmGps {
    class HorizonGPS
    {
        bool ready;
        //UBX protocol
        unsigned int carriagePosition;
        unsigned char headerClass;
        unsigned char headerId;
        unsigned short headerLength;
        unsigned char chksum[2];
    public:
        
        unsigned char rawPacket[MESSAGE_BUFFER_SIZE];
        HorizonGPS();
        void sendUBX(const byte *MSG, uint8_t len);
        bool setupGPS(void);
        bool setupUBX(void);
        
        bool tryGetSerial();
        void setMode(int mode);
        bool encode();
        
    private:
        void clearData();
        void calculateChecksum();
    };
}

#endif // def(__HorizonGPS_h)
